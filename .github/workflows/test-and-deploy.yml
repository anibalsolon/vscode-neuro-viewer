on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop

name: Build
jobs:

  test:
    if: |
      !startsWith(github.event.head_commit.message, '[RELEASE]') &&
      !startsWith(github.event.head_commit.message, '[PRERELEASE]') &&
      !contains(github.event.head_commit.message, '[SKIP:test]')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: npm run clear
      - run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      - run: echo ${{ secrets.COVERALLS_TOKEN }} >> ./.coveralls.yml
      - run: npm run test:coverage
        env:
          DISPLAY: ':99.0'
      - run: rm -f ./.coveralls.yml

  prerelease:
    if: |
      github.event.ref == 'refs/heads/develop' &&
      !startsWith(github.event.head_commit.message, '[RELEASE]') &&
      !startsWith(github.event.head_commit.message, '[PRERELEASE]') &&
      !contains(github.event.head_commit.message, '[SKIP:prerelease]')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: git config --global user.name `jq -r '.author.name' package.json`
      - run: git config --global user.email `jq -r '.author.email' package.json`
      - run: git status
      - run: |
          VERSION=$(npm version prerelease --no-git-tag-version)
          git add package.json package-lock.json
          git commit -m "[PRERELEASE] v${VERSION}"
          git push

          npm run vscode:package
          gh release create v${VERSION} --target develop --prerelease "neuro-viewer-${VERSION}.vsix"
          git push origin v${VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    if: |
      github.event.ref == 'refs/heads/main' &&
      !startsWith(github.event.head_commit.message, '[RELEASE]') &&
      !contains(github.event.head_commit.message, '[SKIP:deploy]')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: git config --global user.name `jq -r '.author.name' package.json`
      - run: git config --global user.email `jq -r '.author.email' package.json`
      - run: git status
      - run: npm version patch -m "[RELEASE] %s"
      - run: npm run vscode:package

      - run: |
          npm run vscode:vsce:publish "$PAT"
        env:
          PAT: ${{ secrets.VSCE_PAT }}

      - run: |
          npm run vscode:ovsx:publish "$PAT"
        env:
          PAT: ${{ secrets.OVSX_PAT }}

      - run: git push
